import { createToolbar } from '@wangeditor/editor';
import Vue from 'vue';
import { injectToolbar, setTimer, TIMER, TOOLBAR_EDITABLE } from './core';
export const WeToolbar = Vue.extend({
    name: 'WeToolbar',
    props: {
        option: {
            type: Object,
            required: true
        },
        reloadbefore: {
            type: Function,
            default: () => () => { },
        },
    },
    created() {
        let instance = null;
        const initialize = (editor) => {
            const elem = this.$refs.elem;
            if (!elem)
                return;
            if (instance) {
                this.reloadbefore(instance);
                instance.destroy();
                delete elem.dataset.wEToolbar;
            }
            instance = createToolbar(Object.assign(Object.assign({}, this.option), { editor, selector: elem }));
            return instance;
        };
        const reload = injectToolbar(this.option, initialize);
        this.$watch('option', () => {
            var _a;
            const editable = TOOLBAR_EDITABLE.get(this.option);
            // 编辑器变更会自动更新 toolbar
            if (!editable || ((_a = TIMER.get(editable)) === null || _a === void 0 ? void 0 : _a[1]) !== null)
                return;
            setTimer(this.option, reload);
        }, { deep: true });
        this.$on('hook:mounted', reload);
        this.$on('hook:beforeDestroy', function () {
            if (!instance)
                return;
            instance.destroy();
            instance = null;
        });
    },
    render(h) {
        return h('div', { ref: 'elem' });
    },
});
WeToolbar.install = function (vue) {
    vue.component('WeToolbar', WeToolbar);
};
//# sourceMappingURL=toolbar.js.map