/// <reference types="node" />
import { IDomEditor, Toolbar } from '@wangeditor/editor';
import { WeEditableOption, WeEditableReload, WeToolbarOption, WeToolbarReload } from './types';
/**
 * 实例与配置项间的关系
 */
export declare const INSTANCE_OPTION: WeakMap<IDomEditor | Toolbar, WeEditableOption | WeToolbarOption>;
/** 编辑器 与 Toolbar 间的映射关系 */
export declare const EDITABLE_TOOLBAR: WeakMap<WeEditableOption, WeToolbarOption>;
/** Toolbar 与 编辑器 间的映射关系 */
export declare const TOOLBAR_EDITABLE: WeakMap<WeToolbarOption, WeEditableOption>;
export declare const TIMER: WeakMap<WeToolbarOption | WeEditableOption, [number, null | NodeJS.Timeout]>;
export declare function getOption(inst: IDomEditor): {
    editable: WeEditableOption;
    toolbar: WeToolbarOption;
};
export declare function setTimer(option: WeToolbarOption | WeEditableOption, fn?: () => void): void;
/**
 * vue hook，在 WeEditable 组件中使用
 */
export declare function injectEditor(option: WeEditableOption, reload: WeEditableReload, clearContent: () => void, syncContent: () => void): () => void;
/**
 * vue hook，在 WeToolbar 组件中使用
 */
export declare function injectToolbar(option: WeToolbarOption, reload: WeToolbarReload): () => void;
/**
 * vue hook，用于实现编辑器配置项的动态绑定
 * @param {Object} editableOption 编辑器主体部分的配置
 * @param {Object} toolbarOption 菜单栏配置
 * @param {Number} reloadDelay 防抖时长，用于重载的延迟控制，单位：毫秒
 */
export declare function useWangEditor(editableOption?: WeEditableOption | null, toolbarOption?: WeToolbarOption | null, reloadDelay?: number): {
    editable: Required<WeEditableOption>;
    toolbar: Required<WeToolbarOption>;
    getEditable: {
        (): IDomEditor | undefined;
        (timeout: number): Promise<IDomEditor>;
    };
    getToolbar: {
        (): Toolbar | undefined;
        (timeout: number): Promise<Toolbar>;
    };
    clearContent: () => void;
    syncContent: () => void;
    reloadEditor: () => void;
};
