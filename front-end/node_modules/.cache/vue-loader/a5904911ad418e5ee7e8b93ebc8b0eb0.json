{"remainingRequest":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\src\\views\\goods\\category.vue?vue&type=style&index=0&id=5cba4e9e&scoped=true&lang=css&","dependencies":[{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\src\\views\\goods\\category.vue","mtime":1694761398920},{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\SoftwareDevelopment\\software\\开源二手商城\\cloud-secondhand-trading\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojejM6Y2hlY2tlZAo="},{"version":3,"sources":["category.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA","file":"category.vue","sourceRoot":"src/views/goods","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row style=\"margin-bottom: 12px\">\n      <el-col :span=\"5\">\n        <el-button icon=\"el-icon-download\" size=\"mini\" type=\"warning\" @click=\"handleExport()\">导出</el-button>\n        <el-button icon=\"el-icon-plus\" size=\"mini\" type=\"primary\" @click=\"handleAdd()\">添加目录</el-button>\n        <el-button icon=\"el-icon-delete\" size=\"mini\" type=\"danger\" @click=\"handleBatchDelete()\">批量删除</el-button>\n      </el-col>\n    </el-row>\n    <el-input placeholder=\"输入关键字进行过滤\" v-model=\"filterText\" style=\"margin: 15px 0px\"></el-input>\n    <el-tree\n      :data=\"categoryList\"\n      :props=\"defaultProps\"\n      :filter-node-method=\"filterNode\"\n      show-checkbox\n      node-key=\"id\"\n      ref=\"tree\"\n      :expand-on-click-node=\"false\">\n      <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n        <span style=\"margin-right: 40px\">{{ data.name }}</span>\n        <span>\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            v-if=\"node.level !=3\"\n            @click=\"appendNode(node)\">\n            添加\n          </el-button>\n          <el-button\n            type=\"text\"\n            size=\"mini\"\n            @click=\"removeNode(node)\">\n            删除\n          </el-button>\n        </span>\n      </span>\n    </el-tree>\n    <el-dialog :title=\"CategoryFormTitle\" :visible.sync=\"CategoryFormShow\" width=\"500px\">\n      <el-form :model=\"categoryForm\" label-width=\"80px\" :rules=\"rules\">\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input v-model=\"categoryForm.name\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"排序\">\n          <el-input v-model=\"categoryForm.sort\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"CategoryFormShow = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveCategory()\">提 交</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { list, remove, save, batchDelete } from '@/api/goods/category'\nimport { exportFile } from '@/utils/request'\nexport default {\n  data() {\n    return {\n      categoryForm: {\n\n      },\n      CategoryFormShow: false,\n      CategoryFormTitle: '添加分类',\n      filterText: '',\n      queryParams: {\n        name: ''\n      },\n      categoryList: [],\n      // 树形控件配置项，为对象，label代表节点的title标签，children代表节点的子树（孩子）\n      defaultProps: {\n        label: 'name',\n        children: 'childrens'\n      },\n      // 默认展开的数组\n      expandKeys: [],\n      rules: {\n        name: [{ required: true, trigger: 'blur', message: '分类名称不能为空' }],\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  methods: {\n    handleExport() {\n      exportFile('/cloud-goods/category/export', '分类列表')\n    },\n    handleBatchDelete() {\n      this.$confirm(`确定删除该分类及子分类吗`, '是否继续?', '提示', {\n        confirmButtonText: '删除',\n        cancelButtonText: '算了吧',\n        type: 'warning'\n      }).then(() => {\n        batchDelete(this.$refs.tree.getCheckedKeys()).then(res => {\n          this.$message({\n            type: 'success',\n            message: '操作成功!'\n          })\n          this.getList()\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消操作'\n        })\n      })\n    },\n    handleAdd() {\n      this.CategoryFormShow = true\n      // 设置分类级别和父分类\n      this.categoryForm.parentCid = 0\n      this.categoryForm.catLevel = 1\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.name.indexOf(value) !== -1;\n    },\n    getList() {\n      list(this.queryParams).then(res => {\n        this.categoryList = res.data\n      })\n    },\n    appendNode(node) {\n      console.log(node)\n      this.CategoryFormShow = true\n      // 设置分类级别和父分类\n      this.categoryForm.parentCid = node.data.id\n      this.categoryForm.catLevel = node.level + 1\n    },\n    removeNode(node, data) {\n      if (!node.isLeaf) {\n        this.$message({\n          type: 'error',\n          message: '请先删除子分类'\n        })\n        return\n      }\n      this.$confirm(`确定删除该分类及子分类吗`, '是否继续?', '提示', {\n        confirmButtonText: '删除',\n        cancelButtonText: '算了吧',\n        type: 'warning'\n      }).then(() => {\n        remove([node.data.id]).then(res => {\n          this.$message({\n            type: 'success',\n            message: '操作成功!'\n          })\n          this.getList()\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消操作'\n        })\n      })\n    },\n    saveCategory() {\n      save(this.categoryForm).then(res => {\n        this.getList()\n        this.categoryForm = {}\n        this.CategoryFormShow = false\n        this.$refs.tree.setCheckedKeys([])\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n#z3:checked\n</style>\n"]}]}